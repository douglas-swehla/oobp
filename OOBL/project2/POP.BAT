::POP.BAT Internal Procedure

@echo off
set _object=
if not exist _stack (
	echo _stack does not exist. & REM Douglas edit
	goto end
)
copy _stack _tmp.bat > nul
TREE /F & REM Douglas edit
PAUSE & REM Douglas edit
::echo 2,65500d;e | edlin _tmp.bat > nul
for /f "tokens=1 delims=" %%F in (_stack) do (
	echo %%F >> _tmp.bat
	goto next
)
:next
TREE /F & REM Douglas edit
PAUSE & REM Douglas edit

::echo 1,1d;e | edlin _stack > nul
if exist _stack.bak del _stack.bak
TREE /F & REM Douglas edit
PAUSE & REM Douglas edit

for /f "skip=1 tokens=1 delims=" %%F in (_stack) do echo %%F >> _stack.bak
TREE /F & REM Douglas edit
PAUSE & REM Douglas edit

del _stack
TREE /F & REM Douglas edit
PAUSE & REM Douglas edit

ren _stack.bak _stack
TREE /F & REM Douglas edit
PAUSE & REM Douglas edit

call _tmp
del _tmp.bat
TREE /F & REM Douglas edit

PAUSE & REM Douglas edit
:end

:: Douglas Notes
:: When POP is called the first time, from SEND.BAT, both _class and _object
:: are undefined.

:: What is 'edlin'? Is it short for 'edit line'? Is it a text editor?
:: CMD doesn't recognize it as a command, and there's no such batch file.

:: After making _stack and _tmp.bat identical, we're going to tweak them.
:: Both of the echo commands seem to be consistent with a line editor:
:: Open _stack for editing, go to line 1, do something to 1, and exit.
:: Open _tmp.bat for editing, go to line 2, do something to 65500, and exit.
:: Is line 65500 the last one the EDLIN can edit?

:: https://technet.microsoft.com/en-us/library/bb490632.aspx
:: http://www.computerhope.com/edlin.htm
:: EDLIN.EXE was an early MS-DOS text editor, which was later replaced by EDIT.
:: EDLIN was supported for backwards compatibility only in Windows XP, and both
:: were removed from Vista and later OSes.
:: The D command would delete a range of lines, and the E command would save
:: and EXIT. The commands above are saying "Delete line 1 from _stack, and 
:: lines 2 through 65500 from _tmp.bat, then run _tmp.bat with it's one line.

:: The functionality in the EDLIN lines can be reproduced with a combination
:: of FOR and ECHO. We can skip line 1 of _stack, and copy the remainder to 
:: _stack.bak. For "each" line in _stack, we can execute it and then quit, so
:: that only the first line is run (as it would have been from _tmp.bat). We
:: can then either move _stack.bak to _stack and delete it, or delete _stack
:: and rename _stack.bak to _stack. The *.bak files seem to be generated by
:: EDLIN, so it might be better to use _stack.tmp, or even just _tmp. See what
:: the convention is in the rest of the scripts.


@echo off
set _object=
if not exist _stack goto :eof
:: Copy all but first line of _stack to _stack.bak
for /f "skip=1 tokens=1 delims=" %%F in (_stack) do echo %%F >> _stack.bak
:: Execute just first line of _stack and break out of loop.
for /f "tokens=1 delims=" %%F in (_stack) do (
	%%F
	goto :POP_next
)
:POP_next
del _stack
ren _stack.bak _stack
goto :eof


:: Original

:: @echo off
:: set _object=
:: if not exist _stack goto end
:: copy _stack _tmp.bat > nul
:: echo 1,1d;e | edlin _stack > nul
:: echo 2,65500d;e | edlin _tmp.bat > nul
:: call _tmp
:: for %%a in (_tmp.bat _tmp.bak _stack.bak) do del %%a
:: :end
